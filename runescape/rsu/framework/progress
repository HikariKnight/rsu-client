# This is the initial progress of the API and modules

API:
	get.client.prms				= 100% # Returns a single string containing the client parameters
	get.rsu.setting				= 100% # Returns all setting keys in settings.conf, the contents of settings.conf or the individual value of a key
	set.client.language			= 100% # Changes the language used by the client
	get.client.language			= 100% # Returns the language used by the client (set by jagexappletviewer.jar)
	set.rsu.setting				= 100% # Change values inside settings.conf
	get.rsu.clientdir			= 100% # Returns the location of the clientdir
	help						= 100% # Shows all available API calls (autoupdates)
	get.java.lib				= 100% # Returns the absolute path to the java library
	get.java.bin				= 100% # Returns the absolute path to the java binary
	get.optimus.bin				= 100% # Return "primusrun" if primus is installed, otherwise return an empty string
	client.launch.runescape		= 100% # Complete, uses the API
	client.launch.settings		= 30% # Make settings use the API
	client.launch.launcher		= 70% # Make launcher use the API
	client.launch.updater		= 10% # Rewrite to use a Wx dialog
	rsu.download.client			= 0% # Will download using LWP and use 7zip or native tools depending on the system to extract the jagexappletviewer
	rsu.download.file			= 100% # Will download a file using the LWP module
	rsu.extract.file			= 0% # Will support at least .zip and .tar.gz on all platforms
	addon.platform.launch		= 0% # Will launch a platform specific addon
	addon.universal.launch		= 0% # Will launch a universal addon

modules:
	client::settings::language	= 100%
	client::settings::prms		= 100%
	client::env					= 100%
	updater::gui::zenity		= 100%
	updater::download::file		= 100%
	updater::download::wxdload	= 100% # Wx Download Dialog is complete
	updater::download::sysdload	= 100% # Download methods using LWP, prints progress to STDOUT
	rsu::extract::archive		= 0% # Uses Archive::Extract to extract .zip and .tar.gz archives (if .msi or .dmg are detected it will try use native tools if possible)
	rsu::extract::client		= 0% # Uses 7-zip or native tools to extract the client
	rsu::files::IO				= 100%
	rsu::files::clientdir		= 100%
	rsu::files::dirs			= 0% # Will run directory checks (equal to "ls /dir | grep" or similar)
	rsu::nvidia::optimus		= 100% # Complete
	rsu::java::jre				= 80% # Try to remove grep dependency
	rsu::java::opengl			= 100% # Replace $rsu_data
	client::appletviewer::jagex	= 50% # Remove grep dependency and use opendir+readdir
	client::modes::verbose		= 100% # Complete
	rsu::mains					= 100% # Complete
	client::init				= ?% # No way to track atm
	
TODO:
	* a way to fetch the launchcode for the client
	* an updater using LWP::Simple
	* addon loader for api (not sure how i want it yet)
	* API call to save/edit prms
	* find a way to get the rsu-query binary to work on snow leopard and above (currently it works only on snow leopard)
	* make a display setting for universal addons (eg: OnlyShowIn=Windows,Mac,Linux)
	* Make the internals of the client and API use stuff from the API itself (listed as its not 100% complete)
