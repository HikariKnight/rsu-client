# This is the initial progress of the API and modules

API:
	get.client.prms				= 100% # Returns a single string containing the client parameters
	get.rsu.setting				= 100% # Returns all setting keys in settings.conf, the contents of settings.conf or the individual value of a key
	set.client.language			= 100% # Changes the language used by the client
	get.client.language			= 100% # Returns the language used by the client (set by jagexappletviewer.jar)
	set.rsu.setting				= 100% # Change values inside settings.conf
	get.rsu.clientdir			= 100% # Returns the location of the clientdir
	help						= 100% # Shows all available API calls (autoupdates)
	get.java.lib				= 100% # Returns the absolute path to the java library
	get.java.bin				= 100% # Returns the absolute path to the java binary
	get.optimus.bin				= 100% # Return "primusrun" if primus is installed, otherwise return an empty string
	client.launch.runescape		= 100% # Complete, uses the API
	client.launch.settings		= 100% # Make settings use the API (does not use the api for prms however that can be updated later as it uses ReadFile instead)
	client.launch.launcher		= 100% # Make launcher use the API
	client.launch.updater		= 100% # Rewrite to use a Wx dialog
	rsu.download.client			= 100% # Will download using LWP and use 7zip or native tools depending on the system to extract the jagexappletviewer
	rsu.download.file			= 100% # Will download a file using the LWP module
	rsu.extract.file			= 100% # Will support at least .zip and .tar/.tar.gz on all platforms
	addon.platform.launch		= 100% # Will launch a platform specific addon
	addon.universal.launch		= 100% # Will launch a universal addon

modules:
	addon::framework			= 100% # Contains the addon framework and loads basic api modules and some useful functions
	client::settings::language	= 100% # Get the selected client language
	client::settings::prms		= 100% # Gets the contents from a prm file
	client::env					= 100% # access to often used env values that might need formating depending on system
	updater::gui::zenity		= 100% # Unused but kept for those thinking of using wget or curl
	updater::download::file		= 100% # uses wxdload or sysdload depending on if wx is available or not
	updater::download::wxdload	= 100% # Wx Download Dialog is complete
	updater::download::sysdload	= 100% # Download methods using LWP, prints progress to STDOUT
	rsu::extract::archive		= 100% # Uses Archive::Extract to extract .zip and .tar/.tar.gz archives
	updater::extract::client	= 100% # msiextract complete, Uses 7-zip or native tools to extract the client
	rsu::files::IO				= 100% # Various file input and output commands
	rsu::files::copy			= 100% # Reimplementation of cp -v from unix for perl
	rsu::files::clientdir		= 100% # Finds the location of the client directory
	rsu::files::dirs			= 100% # Will run list directories and files (list = list contents of directory, rlist = list files recursively)
	rsu::files::grep			= 100% # Provides crossplatform grep functionality
	rsu::nvidia::optimus		= 100% # Complete
	rsu::java::jre				= 100% # Complete
	rsu::java::opengl			= 100% # Complete
	client::appletviewer::jagex	= 100% # Complete
	client::modes::verbose		= 100% # Complete
	rsu::mains					= 100% # Complete
	client::init				= ?% # No way to track atm
	
TODO:
	* add a gui to manage addons_updater.conf from the settings editor
